{"version":3,"sources":["components/Footer.js","components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAiBeA,EAfA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GCESC,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAU,aAkBD,EAhBA,WAGX,OAFgBC,IAAMC,IAAIF,GAEXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKd,UAAU,QAAf,SACGc,KC2EQC,EA7EH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAAqBpB,MAAK,SAAAqB,GACxBT,EAASS,QAEV,IAEH,IAqCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAjC,GAAI,OAAuB,IAAnBA,EAAKG,aAEhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASS,IACvB,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAAlC,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAC1BC,iBAAkB,kBAhCC,SAAAc,GAChB,qBAAiBA,GAA1B,IACMf,EAAOqB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAErB,KAAOA,KAChCsB,EAAW,2BAAQrC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EAAmBf,EAAIsB,GAAa3B,MAAK,SAAA4B,GACvChB,EAASD,EAAMa,KAAI,SAAAlC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOsC,SAClDC,OAAM,SAAAC,GACPZ,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGboC,YAAW,WACTb,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAErB,KAAOA,SAkBV2B,CAAmB1C,EAAKe,MADrCf,EAAKe,SAIpB,uBAAM4B,SAlDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBzC,QAASkB,EACTwB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,GAC3BpC,GAAIM,EAAM+B,OAAS,GAGrBtB,EAAmBgB,GAAYpC,MAAK,SAAA4B,GAClChB,EAASD,EAAMgC,OAAOf,IACtBd,EAAW,QAuCX,UACE,uBACE8B,MAAO/B,EACPgC,SAzDiB,SAACX,GACxBpB,EAAWoB,EAAMY,OAAOF,UAyDpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC1ENC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cd9aab3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    \n    return request.then(response => response.data)\n  }\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\n\nimport Footer from './components/Footer'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const toggleImportanceOf = id => {\n    const url = `/api/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    }).catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id} note={note} \n          toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}